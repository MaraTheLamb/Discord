import logging

from discord import Embed, Message, NotFound
from discord.ext.commands import Cog

from bot.bot import Bot
from bot.constants import AntiMalware as AntiMalwareConfig, Channels, URLs

log = logging.getLogger(__name__)


class AntiMalware(Cog):
    """Delete messages which contain attachments with non-whitelisted file extensions."""

    def __init__(self, bot: Bot):
        self.bot = bot

    @Cog.listener()
    async def on_message(self, message: Message) -> None:
        """Identify messages with prohibited attachments."""
        if not message.attachments:
            return

        embed = Embed()
        for attachment in message.attachments:
            filename = attachment.filename.lower()
            if filename.endswith('.py'):
                embed.description = (
                    f"It looks like you tried to attach a Python file - please "
                    f"use a code-pasting service such as {URLs.site_schema}{URLs.site_paste}"
                )
                break  # Other detections irrelevant because we prioritize the .py message.
            if not filename.endswith(tuple(AntiMalwareConfig.whitelist)):
                whitelisted_types = ', '.join(AntiMalwareConfig.whitelist)
                meta_channel = self.bot.get_channel(Channels.meta)
                embed.description = (
                    f"It looks like you tried to attach a file type that we "
                    f"do not allow. We currently allow the following file "
                    f"types: **{whitelisted_types}**. \n\n Feel free to ask "
                    f"in {meta_channel.mention} if you think this is a mistake."
                )
        if embed.description:
            await message.channel.send(f"Hey {message.author.mention}!", embed=embed)

            # Delete the offending message:
            try:
                await message.delete()
            except NotFound:
                log.info(f"Tried to delete message `{message.id}`, but message could not be found.")


def setup(bot: Bot) -> None:
    """Load the AntiMalware cog."""
    bot.add_cog(AntiMalware(bot))
